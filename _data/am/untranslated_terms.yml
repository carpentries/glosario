- slug: plus_one
  am:
    def: 'A vote in favor of something.

      '
    term: '+1'
- slug: accuracy
  am:
    def: 'Accuracy measures how close results are to the true or known value. A statistical
      measure of a classification model which gives the proportion of correct predictions
      among a total number of cases. It is calculated as Accuracy = (TP+TN)/(TP+TN+FP+FN).

      - TP = True Positive - FP = False Positive - FN = False Negative - TN = True
      Negative

      Accuracy and precision are both ways to measure results. Accuracy measures how
      close results are to the true or known value. Precision, on the other hand,
      measures how close results are to one another.

      '
    term: accuracy
- slug: actual_result
  am:
    def: 'The outcome or value of performing a statistical test. If this matches the
      [expected result](#expected_result), the test [passes](#pass_test); if the two
      are different, the test [fails](#fail_test).

      '
    term: actual result (of test)
- slug: aggregation
  am:
    def: 'To combine many values into one, e.g., by summing a set of numbers or linking
      a set of strings.

      '
    term: aggregation
- slug: aggregation_function
  am:
    def: 'A function that combines many values into one, such as `sum` or `max`.

      '
    term: aggregation function
- slug: agile
  am:
    def: 'A software development methodology that emphasizes lots of small steps and
      continuous feedback instead of up-front planning and long-term scheduling. [Exploratory
      programming](#exploratory_programming) is often agile.

      '
    term: agile development
- slug: algorithm
  am:
    def: 'An algorithm is a set of steps, intructions, or rules followed to accomplish
      a specific task. In computer science, an algorithm is a set of instructions
      in a computer program that solves a computational problem.

      '
    term: algorithm
- slug: aliasing
  am:
    def: 'To have two or more references to the same thing, such as a data structure
      in memory or a file on disk.

      '
    term: aliasing
- slug: anaconda
  am:
    def: 'Anaconda is a [software distribution](#software_distribution) of R and Python.
      It is also a [repository](#repository) of open-source Python and R programs
      for data science, packaged using the [conda](#conda) [package manager](#package_manager).
      Anaconda also creates Anaconda Navigator, a suite of desktop tools including
      an [IDE](#ide) and the [Jupyter Notebook](#jupyter_notebook) application.

      '
    term: Anaconda
- slug: anchor
  am:
    def: 'In a [regular expression](#regular_expression), a symbol that fixes a position
      without matching characters. `^` matches the start of the line, while `$` matches
      the end of the line and `\b` matches a break between word and non-word characters.

      '
    term: anchor
- slug: artificial_intelligence
  am:
    def: 'Intelligence demonstrated by machines, as opposed to humans or other animals.
      AI can be exhibited through perceiving, synthesizing and inference of information.
      Example tasks include [natural language processing](#nlp), computer vision,
      and [machine learning] (#machine_learning).

      '
    term: artificial intelligence (AI)
- slug: autocorrelation
  am:
    def: 'The degree of similarity between observations in the same series but separated
      by a time interval (known as the "lag"). Autocorrelation analysis can be used
      to gain insight into time series datasets by detecting repeating patterns that
      may be partially concealed by random noise, among other uses.

      '
    term: autocorrelation
- slug: bayes_theorem
  am:
    def: 'An equation for calculating the probability that something is [true](#true)
      if something related to it is true. If P(X) is the probability that X is true
      and P(X`|`Y) is the probability that X is true given Y is true, then P(X`|`Y)
      = P(Y`|`X) * P(X) / P(Y).

      '
    term: Bayes' Theorem
- slug: blob
  am:
    def: 'Data that is stored in a database without being interpreted in any way,
      such as an audio file. The term is also now used to refer to data transferred
      over a network or stored in a [version control](#version_control_system) [repository](#repository)
      as uninterpreted bits.

      '
    term: binary large object
- slug: breadcrumbs
  am:
    def: 'A set of supplementary navigational links included in many websites, usually
      placed at the top of the page. Breadcrumbs show the users where the current
      page lies in the website; the term comes from a fairy tale in which children
      left a trail of breadcrumbs behind themselves so that they could find their
      way home.

      '
    term: breadcrumbs
- slug: browser_cache
  am:
    def: 'A place where web browsers keep copies of previously retrieved files (web
      pages, data files) in order to save time when they''re requested again. Sometimes,
      issues may arise if there is a newer version of the file online, but the browser
      doesn''t notice it.

      '
    term: browser cache
- slug: byte
  am:
    def: 'A unit of digital information that typically consists of eight [binary](#binary)
      digits, or [bits](#bit).

      '
    term: byte
- slug: caching
  am:
    def: 'To save a copy of some data in a local [cache](#cache) to make future access
      faster.

      '
    term: caching
- slug: camel_case
  am:
    def: 'A style of writing code that involves naming variables and objects with
      no space, underscore (`_`), dot (`.`), or dash (`-`) characters, with each word
      being capitalized. Examples include `CalculateSum` and `findPattern`.

      '
    term: camel case
- slug: class_imbalance
  am:
    def: 'Class imbalance refers to the problem in [machine learning](machine_learning)
      where there is an unequal distribution of classes in the dataset.

      '
    term: class imbalance
- slug: collection
  am:
    def: 'An abstract data type that groups an arbitrary, variable number of data
      items (possibly zero), to allow processing them in a uniform fashion. Common
      examples of collections are lists, variable-size arrays and sets. Fixed-size
      arrays are usually not considered collections.

      '
    term: collection
- slug: compute_shader
  am:
    def: 'A general purpose [shader](#shader) program for use in parallel processing.
      Often used for [machine learning](#machine_learning), simulations, and other
      fields which benifit from parallel computation.

      '
    term: compute shader
- slug: concatenate
  am:
    def: 'In general programming, to join two [strings](#string) or [collections](#collection)
      together. In terms of data tables (for example, a [python](#python) pandas DataFrame
      or R tibble), append/stack two tables by either columns (axis=1) or rows (axis=0)
      by end-to-end joining of data.

      '
    term: Concatenate
- slug: conda
  am:
    def: 'A [package manager](#package_manager) and environment management system,
      particularly popular for Python programs.

      '
    term: conda
- slug: confusion_matrix
  am:
    def: 'A NxN matrix that describes the performance of a classification model, where
      N is the number of classes or outputs. Each row in the matrix represents the
      instances of actual classes and each column represents the predicted classes.
      For a binary classification model the confusion matrix gives the True Positives
      (TP), False Negatives (FN), False Positives (FP) and True Negatives (TN) in
      the 1st, 2nd, 3rd and 4th quadrants, respectively. The table can be used to
      calculate [Accuracy](#accuracy), [Sensitivity](#sensitivity) and [Specificity](#specificity)
      amongst other measures of the model.

      '
    term: confusion matrix
- slug: constant
  am:
    def: "A constant in programming is a name associated with a value that never changes\
      \ during the execution of a program. You can only access the constant\u2019\
      s value but not change it over time, as opposed to a [variable](#variable_program)\n"
    term: constant
- slug: continuous_integration
  am:
    def: 'A software development practice in which changes are automatically merged
      as soon as they become available.

      '
    term: continuous integration
- slug: control_flow
  am:
    def: 'The logical flow through a program''s code. May be linear (i.e. just a series
      of commands), but may also include [loops](#loop) or conditional execution (i.e.
      if a condition is met).

      '
    term: control flow
- slug: cnn
  am:
    def: 'A class of artificial neural network that is primarily used to analyze images.
      A CNN has layers that perform convolutions, where a filter is shifted over the
      data, instead of the general matrix multiplications that we see in fully connected
      neural network layers.

      '
    term: convolutional neural network (cnn)
- slug: data_collison
  am:
    def: 'Occurs when  when two or more devices or nodes try to transmit signals at
      the same time on the same network. Similarly a data collision can also occur
      when [hashing](#hash_function) if two distinct pieces of data have the same
      hash value.

      '
    term: data collison
- slug: data_frame
  am:
    def: 'A two-dimensional data structure for storing tabular data in memory. Rows
      represent [records](#record) and columns represent [variables](#variable_data).

      '
    term: data frame
- slug: data_structure
  am:
    def: 'A format for the organisation, management, and efficient access of data.
      Typically it will characterise a set of data values and their representation
      (or [encoding](#character_encoding)), the relationships between values, and
      ways to access or manipulate those data, such as reading, altering, or writing.

      '
    term: data structure
- slug: debug
  am:
    def: 'In a computer environment ''debug'' refers to the process of finding and
      resolving errors (also known as ''bugs'') within computer programs or systems.

      '
    term: debug
- slug: decrement
  am:
    def: 'A unary operation that decreases the value of a variable, usually by 1.

      '
    term: decrement
- slug: degrees_of_freedom
  am:
    def: 'In statistics, the degrees of freedom (often "DF") is a measure of how much
      independent information, in the form data and calculations, has been combined
      to produce a given statistical parameter. Put another way, the DF is the number
      of values that are free to vary in the calculation of a given statistical parameter.
      For a statistic calculated from data which are indepdendent (i.e., the values
      are uncorrelated), the DF can be generally estimated as the sample size minus
      the number of individual parameters calculated to obtain the final statistic.

      '
    term: degrees of freedom
- slug: directory
  am:
    def: 'An item within a [filesystem](#filesystem) that can contain files and other
      directories. Also known as a [folder](#folder).

      '
    term: directory
- slug: email
  am:
    def: 'Electronic mail is a method for delivering messages between people over
      a computer network. Messages are sent via an [SMTP](#smtp) server and retrieved
      using either an [IMAP](#imap) or [POP](#pop) server.

      '
    term: Electronic mail
- slug: emacs
  am:
    def: 'A text editor that is popular among Unix programmers.

      '
    term: Emacs (editor)
- slug: encoding
  am:
    def: 'The process of putting a sequence of characters such as letters, numbers,
      punctuation, and certain symbols, into a specialized format for efficient transmission
      or storage.

      '
    term: encoding
- slug: epoch_dl
  am:
    def: 'In [deep learning](#deep_learning), an epoch is one cycle in the deep learning
      process where all the training data has been fed to the algorithm once. Training
      a deep neural networks usually consists of multiple epochs.

      '
    term: epoch (deep learning)
- slug: false_negative
  am:
    def: 'Data points which are actually [true](#true) but incorrectly predicted as
      [false](#false).

      '
    term: false negative
- slug: false_positive
  am:
    def: 'Data points which are actually [false](#false) but incorrectly predicted
      as [true](#true).

      '
    term: false positive
- slug: fasta
  am:
    def: "A file format for storing amino acid or genomic sequence information. Information\
      \ for each sequence is broken up into a block of 2 lines. Line 1 contains information\
      \ about the sequence and begins with a greater than symbol, \u2018>\u2019. Line\
      \ 2 contains the actual amino acid or genomic sequence using single-letter codes.\n"
    term: FASTA
- slug: fastq
  am:
    def: "A file format for storing genomic sequence information and the corresponding\
      \ quality scores. Information for each sequence is broken up into a block of\
      \ four lines. Line 1 contains information about the sequence and begins with\
      \ \u2018@\u2019. Line 2 contains the actual genomic sequence using single-letter\
      \ codes to represent nucleotides. Line 3 is a separator that begins with a `+`.\
      \ Line 4 has a string of quality characters for each base in the genomic sequence.\n"
    term: FASTQ
- slug: feature
  am:
    def: 'An individual characteristic or property of a phenomenon that is measurable
      (e.g. length, height, number of petals) and used as the input to a model. Finding
      or selecting features that are highly independent and discriminatory is a fundamental
      part of classification.

      '
    term: Feature
- slug: fine_tuning
  am:
    def: "Fine-tuning is an approach to transfer learning in which a pre-trained network\
      \ is adapted to the  specifics of a new dataset. \n"
    term: fine-tuning (deep learning)
- slug: fragment_shader
  am:
    def: 'The [shader](#shader) stage in the rendering pipeline designated towards
      calculating colours for each fragment on the screen. For each pixel covered
      by a primitive, a fragment is generated. All fragments for each pixel will have
      their colours combined based on depth and opacity after the fragment shader
      stage is complete.

      '
    term: fragment shader
- slug: functional_programming
  am:
    def: 'A style of programming in which data is transformed through successive application
      of functions, rather than by using control structures such as loops. In functional
      programming, there must be a direct relationship between the input to a function
      and the output produced by the function, meaning the result should not be affected
      by the current values of global variables or other parts of the [global program
      state](#global_environment). It also requires that functions do not produce
      [side effects](#side_effect), meaning they do not modify the global program
      state, or do anything other than computing the return value, such as writing
      output to a [log](#log) file, or printing to the [console](#console).

      '
    term: functional programming
- slug: geometric_mean
  am:
    def: 'Calculated from a set of n numbers by first computing the product of those
      numbers, and then computing the n-th [root](#root_math) of the result. In contrast
      to the [arithmetic mean](#arithmetic_mean), which measures central tendancy
      in an "additive" way, the geometric mean measures central tendancy in a "multiplicative"
      way, and hence is often appropriate when estimating an average rates of change
      or some other multiplicative constant.

      '
    term: Geometric Mean
- slug: geometry_shader
  am:
    def: 'The [shader](#shader) stage in the rendering pipeline designated towards
      processing primitives. Not to be confused with [tessellation shaders](#tessellation_shader),
      geometry shaders are focused on modifying the shape of primitives to create
      new results. For example, pixels may be converted into particles using a geometry
      shader.

      '
    term: geometry shader
- slug: ggplot2
  am:
    def: 'A [package](#package) in [R](#r_language) that implements a layered grammar
      of graphics for generating plots. It is a popular alternative to plotting with
      [base R](#base_r) and part of the [tidyverse](#tidyverse).

      '
    term: ggplot2
- slug: gnu
  am:
    def: '"GNU" is an [operating system](#operating_system) that is free software.
      GNU is a recursive acronym for "GNU is Not Unix!". The GNU operating system
      consists of GNU [packages](#package) as well as free software realeased by third
      parties.

      '
    term: GNU Operating System
- slug: gui
  am:
    def: 'A user interface that relies on windows, menus, pointers, and other graphical
      elements, as opposed to a [command-line interface](#cli) or voice-driven interface.

      '
    term: graphical user interface
- slug: gpu
  am:
    def: 'Specialized processor designed to run many instances of a single program
      in parallel. Orginally designed for use in graphics, but is also used for general
      computation in the form of [compute shaders](#compute_shader).

      '
    term: Graphics Processing Unit
- slug: harmonic_mean
  am:
    def: 'Calculated from a set of n numbers by first computing the sum of the [reciprocals](#reciprocal)
      of those numbers, and then dividing n by the resulting sum. Alternatively, it
      can be computed as the [reciprocal](#reciprocal) of the [arithmetic mean](#arithmetic_mean)
      of the [reciprocal](#reciprocal) values. Similarly to the [geometric mean](#geometric_mean),
      the harmonic mean is often used as an alternative measure of central tendancy
      to the usual [arithmetic mean](#arithmetic_mean) when estimating an average
      rates of change or some other multiplicative constant. For a set of positive
      numbers that are not all equal, the min < HM < GM < AM < max where min is the
      minimum value, max is the maximum value, and HM GM and AM are the harmonic,
      [geometric](#geometric_mean), and [arithmetic](#arithmetic_mean) means respectively.

      '
    term: Harmonic Mean
- slug: hidden_layer
  am:
    def: 'A hidden layer in a [neural network](#neural_network) refers to the layers
      of neurons that are not directly connected to input or output. The layers are
      "hidden" because you do not directly observe their input and output values.

      '
    term: hidden layer (deep learning)
- slug: high_performance_computing
  am:
    def: 'When computing power is drawn from multiple powerful processors that work
      together in parallel, rather than from a single desktop computer, laptop, or
      work station. This significantly speeds up analysis and reduces computing time,
      which allows people to work with [big data](#big_data).

      '
    term: high performance computing
- slug: icon
  am:
    def: 'In computing, an icon is a graphic symbol that is displayed on a computer
      screen to help a user navigate the computer system.

      '
    term: icon
- slug: immutable_type
  am:
    def: 'Immutable is when no change is possible over time. An object of this type
      can not be changed and its state can not be modified after it is created.

      '
    term: immutable type
- slug: increment
  am:
    def: 'A unary operation that increases the value of a variable, usually by 1.

      '
    term: increment
- slug: independent_variable
  am:
    def: 'The factor that you purposely change or control in order to see what effect
      it has on the [dependent variable](#dependent_variable).

      '
    term: independent variable
- slug: index
  am:
    def: 'Each of the elements of an array. Indexes represent the position by numerical
      representation.

      '
    term: index
- slug: infinite_loop
  am:
    def: 'A loop where the exit condition is never met, so the loop continues to repeat
      itself. Often a programming error.

      '
    term: infinite loop
- slug: interface
  am:
    def: 'A ubiquitously used phrase in computing that describes a point of contact.
      This could be a user interface (e.g. [graphical user interface](#gui) or [command
      line](#cli)), the interface of an [object](#object) with the rest of the [code](#source_code)
      or how a program can interact with web services through an [API](#api).

      '
    term: interface
- slug: imap
  am:
    def: 'A standard internet protocol used by email clients to retrieve messages
      from an email server. Messages are left on the server so that they can be accessed
      from multiple email clients.

      '
    term: Internet Message Access Protocol
- slug: invariant
  am:
    def: 'Something that must be [true](#true) at all times inside of a program or
      during the [lifecycle](#lifecycle) of an [object](#object). Invariants are often
      expressed using [assertions](#assertion). If an invariant expression is not
      true, this is indicative of a problem, and may result in failure or early termination
      of the program.

      '
    term: invariant
- slug: java
  am:
    def: 'Java is a high-level, cross-platform, object-oriented and general-purpose
      programming language. Programs written in Java will run on any platform that
      supports the Java software platform without having to be recompiled. This feature
      gave rise to the slogan "Write Once Run Anywhere". Java syntax is similar to
      that of C and C++.

      '
    term: Java
- slug: jupyterlab
  am:
    def: 'A next-generation interface to [Jupyter Notebooks](#jupyter_notebook). JupyterLab
      is open-source, web-based and has a multiple-document interface which supports
      working with multiple notebooks and [Markdown](#markdown) files in a single
      browser tab. JupyterLab also supports opening terminal/[console](#console) windows
      in the browser.

      '
    term: JupyterLab
- slug: learning_rate
  am:
    def: 'In [artificial neural networks](#neural_network), the learning rate is a
      hyper-parameter that determines the pace at which the network adjusts the weights
      to move down the loss gradient. A large learning rate can speed up training,
      but the network might overshoot and miss the minimum. A small learning rate
      will overshoot less, but will be slower. It can also get more easily stuck in
      local minima.

      '
    term: learning rate (deep learning)
- slug: loop
  am:
    def: 'A structure that repeatedly executes a section of code until a specific
      exit condition is met.

      '
    term: loop
- slug: lsof
  am:
    def: 'UNIX command to see the list of open files being used by [processes](#process).

      '
    term: lsof
- slug: masking
  am:
    def: '[TODO] to be defined

      '
    term: Masking
- slug: minimum_spanning_tree
  am:
    def: 'A minimum spanning tree is a data structure that describes the unique set
      of [edges](#edge) that connect all of the [nodes](#node) in a [graph](#graph)
      while minimizing the weights of all included [edges](#edge). The minimum spanning
      tree may refer to either the algorithm to calculate the structure or the resulting
      structure itself.

      '
    term: minimum spanning tree
- slug: mode
  am:
    def: 'The value, or values, that occurs most frequently in a dataset.

      '
    term: mode
- slug: model
  am:
    def: 'A specification of the mathematical relationship between different variables.

      '
    term: model
- slug: module
  am:
    def: 'A reusable software [package](#package), also often called a [library](#library).

      '
    term: module
- slug: monte_carlo
  am:
    def: 'Any method or algorithm that relies on artificially-injected randomness.

      '
    term: Monte Carlo method
- slug: moving_average
  am:
    def: 'The [mean](#mean) of each set of several consecutive values from [time series](#time_series)
      data.

      '
    term: moving average
- slug: multi_threaded
  am:
    def: 'Capable of performing several operations simultaneously. Multi-threaded
      programs are usually more efficient than [single-threaded](#single_threaded)
      ones, but also harder to understand and [debug](#debug).

      '
    term: multi-threaded
- slug: mutable_type
  am:
    def: 'An object of this type may be changed and its state can be modified after
      it is created.

      '
    term: mutable type
- slug: mutation
  am:
    def: 'Changing data in place, such as modifying an element of an array or adding
      a record to a database.

      '
    term: mutation
- slug: n_gram
  am:
    def: 'A sequence of $N$ items, typically words in natural language. For example,
      a trigram is a sequence of three words. N-grams are often used as input in [computational
      linguistics](#computational_linguistics).

      '
    term: n-gram
- slug: root_math
  am:
    def: 'The n-th root of a positive number x is the number that when multiplied
      by itself n times produces x. This can commonly be calculated by raising x to
      the power of the [reciprocal](#reciprocal) of n.

      '
    term: n-th root
- slug: na
  am:
    def: 'A special value used to represent data that is not available.

      '
    term: NA
- slug: naive_bayes_classifier
  am:
    def: 'Any [classification](#classification) algorithm based on [Bayes'' Theorem](#bayes_theorem)
      that assumes every [feature](#feature_data) being classified is independent
      of every other feature.

      '
    term: naive Bayes classifier
- slug: name_collision
  am:
    def: 'The ambiguity that arises when two or more things in a program that have
      the same name are active at the same time. Most languages use [namespaces](#namespace)
      to prevent such collisions.

      '
    term: name collision
- slug: named_argument
  am:
    def: 'A function [parameter](#parameter) that is given a value by explicitly naming
      it in a function call.

      '
    term: named argument
- slug: namespace
  am:
    def: 'A collection of names in a program that exists in isolation from other namespaces.
      Each function, [object](#object), [class](#class), or [module](#module) in a
      program typically has its own namespace so that references to "X" in one part
      of a program do not accidentally refer to something called "X" in another part
      of the program. Scope is a distinct, but related, concept.

      '
    term: namespace
- slug: nano_editor
  am:
    def: 'A very simple text editor found on most Unix systems.

      '
    term: Nano (editor)
- slug: nlp
  am:
    def: 'See [computational linguistics](#computational_linguistics).

      '
    term: natural language processing
- slug: negative_selection
  am:
    def: 'To specify the [elements](#element) of a [vector](#vector) or other data
      structure that are not desired by negating their indices.

      '
    term: negative selection
- slug: neural_network
  am:
    def: 'One of a large family of algorithms for identifying patterns in data by
      mimicking the way neurons interact. A neural network consists of one or more
      layers of [nodes](#node), each of which is connected to nodes in the preceding
      and subsequent layer. If enough of a node''s inputs are active, that node activates
      as well.

      '
    term: neural network
- slug: node
  am:
    def: 'An element of a [graph](#graph) that is connected to other nodes by [edges](#edge).
      Nodes typically have data associated with them, such as names or weights.

      '
    term: node
- slug: non_blocking_execution
  am:
    def: 'To allow a program to continue running while an operation is in progress.
      For example, many systems support non-blocking execution for file I/O so that
      the program can continue doing work while it waits for data to be read from
      or written to the [filesystem](#filesystem) (which is typically much slower
      than the CPU).

      '
    term: non-blocking execution
- slug: nonparametric_statistics
  am:
    def: 'A branch of statistical tests which do not assume a known distribution of
      the population which the samples were taken from (Kruskal-Wallis and Dunn test
      are examples of non-parametric tests).

      '
    term: non-parametric (statistics)
- slug: normal_distribution
  am:
    def: 'A continuous random distribution with a symmetric bell-curve shape. As datasets
      get larger, some of their most important statistical properties can be modeled
      using a normal distribution.

      '
    term: normal distribution
- slug: nosql_database
  am:
    def: 'Any database that does not use the [relational](#relational_database) model.
      The name comes from the fact that such databases do not use [SQL](#sql) as a
      query language.

      '
    term: NoSQL database
- slug: 'null'
  am:
    def: 'A special value used to represent a missing object. Null is not the same
      as [NA](#na), and neither is it the same as an [empty vector](#empty_vector).

      '
    term: 'null'
- slug: null_hypothesis
  am:
    def: 'The claim that any patterns seen in data are entirely due to chance. Other
      claims (e.g., "X causes Y") must be much more likely than the null hypothesis
      in order to be substantiated.

      '
    term: null hypothesis
- slug: nullary_expression
  am:
    def: 'An "expression" with no arguments, such as the value 3.

      '
    term: nullary expression
- slug: numpy
  am:
    def: 'An open source Python package that works with arrays, vectors and matrices
      of dimension N, in a comparable method and with a syntax similar at Matlab software.
      You can find functions and sophisticated operations, focused in multidimensional
      arrays, linear algebra, Fourrier transform and generation of random values.

      '
    term: numpy
- slug: object
  am:
    def: 'In [object-oriented programming](#oop), a structure that contains the data
      for a specific instance of a [class](#class). The operations the object is capable
      of are defined by the class''s [methods](#method).

      '
    term: object
- slug: oop
  am:
    def: 'A style of programming in which functions and data are bound together in
      [objects](#object) that only interact with each other through well-defined interfaces.

      '
    term: object-oriented programming
- slug: objective_function
  am:
    def: 'A function of one or more variables used to measure or compare the goodness
      of different solutions in an optimization problem.

      '
    term: objective function
- slug: observation
  am:
    def: 'A value or property of a specific member of a population.

      '
    term: observation
- slug: off_by_one_error
  am:
    def: 'A common error in programming in which the program refers to element `i`
      of a structure when it should refer to element `i-1` or `i+1`, or processes
      `N` elements when it should process `N-1` or `N+1`.

      '
    term: off-by-one error
- slug: open_license
  am:
    def: 'A [license](#license) that permits general re-use, such as the [MIT License](#mit_license)
      or [GPL](#gpl) for software and [CC-BY](#cc_by) or [CC-0](#cc_0) for data, prose,
      or other creative outputs.

      '
    term: open license
- slug: open_science
  am:
    def: 'A generic term for making scientific software, data, and publications generally
      available.

      '
    term: open science
- slug: openrefine
  am:
    def: 'A standalone, open source desktop application for data cleanup and transformations,
      also know as data wrangling.

      '
    term: OpenRefine
- slug: operating_system
  am:
    def: 'A program that provides a standard interface to whatever hardware it is
      running on. Theoretically, any program that only interacts with the operating
      system should run on any computer that operating system runs on.

      '
    term: operating system
- slug: optional_parameter
  am:
    def: 'A [parameter](#parameter) that does not have to be given a value when a
      function is called. Most programming languages require programmers to define
      [default values](#default_value) for optional parameters, or assign them a special
      value automatically. Arguments passed to optional parameters will often be specified
      using [keyword arguments](#keyword_argument).

      '
    term: optional_parameter
- slug: orcid
  am:
    def: 'An Open Researcher and Contributor ID that uniquely and persistently identifies
      an author of scholarly works. ORCIDs are for people what [DOIs](#doi) are for
      documents.

      '
    term: ORCID
- slug: orthogonality
  am:
    def: 'The ability to use various features of software in any order or combination.
      Orthogonal systems tend to be easier to understand, since features can be combined
      without worrying about unexpected interactions.

      '
    term: orthogonality
- slug: outlier
  am:
    def: 'Extreme values that might be measurement or recording errors, or might actually
      be rare events. Outliers are sometimes ignored when doing statistics, or handled
      or visualized separately.

      '
    term: outlier
- slug: overfitting
  am:
    def: 'Fitting a [model](#model) so closely to one dataset that it does not generalize
      to others.

      '
    term: overfitting
- slug: p_value
  am:
    def: 'The probability of obtaining a result at least as strong as the one observed
      if the [null_hypothesis](#null_hypothesis) is [true](#true) (i.e., if variation
      is purely due to chance). The lower the p-value, the more likely it is that
      something other than chance is having an effect.

      '
    term: p value
- slug: package
  am:
    def: 'A collection of code, data, and documentation that can be distributed and
      re-used. Also referred to in some languages as a [library](#library) or [module](#module).

      '
    term: package
- slug: package_manager
  am:
    def: 'A program that does its best to keep track of the different software installed
      on a computer and their dependencies on one another.

      '
    term: package manager
- slug: pager
  am:
    def: 'A program that displays a few lines of text at a time.

      '
    term: pager
- slug: pandas
  am:
    def: 'An open source Python package that offers fast, flexible, and expressive
      data structures to make working with structured data, and time series easy and
      intuitive. It is a powerful tool for data analysis and data manipulation.

      '
    term: pandas
- slug: parameter
  am:
    def: 'A variable specified in a function definition whose value is passed to the
      function when the function is called. Parameters and arguments are distinct,
      but related concepts. Parameters are variables and [arguments](#argument) are
      the values assigned to those variables.

      '
    term: parameter
- slug: parametric_statistics
  am:
    def: "A branch of statistical tests which assume a known distribution of the population\
      \ which the samples were taken from (ANOVA and Student\u2019s t-tests are examples\
      \ of parametric tests).\n"
    term: parametric (statistics)
- slug: parent_tree
  am:
    def: 'A [node](#node) in a [tree](#node) that is above another node (call a [child](#child_tree)).
      Every node in a tree except the [root node](#root_tree) has a single parent.

      '
    term: parent (in a tree)
- slug: parent_class
  am:
    def: 'In [object-oriented programming](#oop), the [class](#class) from which a
      sub class (called the [child class](#child_class)) is derived.

      '
    term: parent class
- slug: parent_directory
  am:
    def: 'The [directory](#directory) that contains another directory of interest.
      Going from a directory to its parent, then its parent, and so on eventually
      leads to the [root directory](#root_directory) of the [filesystem](#filesystem).

      '
    term: parent directory
- slug: parse
  am:
    def: 'To translate the text of a program or web page into a data structure in
      memory that the program can then manipulate.

      '
    term: parse
- slug: pass_test
  am:
    def: 'A test passes if the [actual result](#actual_result) matches the [expected
      result](#expected_result).

      '
    term: pass (a test)
- slug: patch
  am:
    def: 'A single file containing a set of changes to a set of files, separated by
      markers that indicate where each individual change should be applied.

      '
    term: patch
- slug: path
  am:
    def: 'A [string](#string) that specifies a location in a [filesystem](#filesystem).
      In Unix, the [directories](#directory) in a path are joined using `/`.

      '
    term: path (in filesystem)
- slug: pattern_rule
  am:
    def: 'A generic [build rule](#build_rule) that describes how to update any file
      whose name matches a pattern. Pattern rules often use [automatic variables](#automatic_variable)
      to represent the actual filenames.

      '
    term: pattern rule
- slug: peanuts
  am:
    def: 'An American comic strip by Charles M. Schulz which has inspired the names
      of [R](#r_language) versions.

      '
    term: Peanuts
- slug: perceptron
  am:
    def: 'The simplest kind of [neural network])(#neural_network), which approximates
      a single neuron with _N_ binary inputs by computing a weighted sum of its inputs
      and firing if that value is zero or greater.

      '
    term: perceptron
- slug: permalink
  am:
    def: 'Short for "permanent link", a URL that is intended to last forever.

      '
    term: permalink
- slug: phony_target
  am:
    def: 'A [build target](#build_target) that does not correspond to an actual file.
      Phony targets are often used to store commonly used commands in a [Makefile](#makefile).

      '
    term: phony target
- slug: pip
  am:
    def: 'The standard [package manager](#package_manager) for [Python](#python).
      pip enables the download and installation of Python packages not included in
      the standard library.

      '
    term: Pip Install Packages
- slug: pipe_shell
  am:
    def: 'The `|` used to make the output of one command the input of the next.

      '
    term: pipe (in the Unix shell)
- slug: pipe_operator
  am:
    def: 'The `%>%` used to make the output of one function the input of the next.

      '
    term: pipe operator
- slug: pivot_table
  am:
    def: 'A technique for summarizing tabular data in which each cell represents the
      sum, average, or other function of the subset of the original data identified
      by the cell''s row and column heading.

      '
    term: pivot table
- slug: pointcloud
  am:
    def: 'A set of discrete data points in three-dimensional space.

      '
    term: pointcloud
- slug: poisson_distribution
  am:
    def: 'A [discrete random distribution](#discrete_random_variable) that expresses
      the probability of $N$ events occurring in a fixed time interval if the events
      occur at a constant rate, independent of the time since the last event.

      '
    term: Poisson distribution
- slug: positional_argument
  am:
    def: 'An argument to a function that gets its value according to its place in
      the function''s definition, as opposed to a named argument that is explicitly
      matched by name.

      '
    term: positional argument
- slug: pop
  am:
    def: 'A standard internet protocol used by email clients to retrieve messages
      from an email server. Messages are generally downloaded and deleted from the
      server, making it difficult to access messages from multiple email clients.
      POP3 (version 3) is the version of POP in common use.

      '
    term: Post Office Protocol
- slug: posterior_distribution
  am:
    def: 'Probability distribution summarizing the [prior distribution](#prior_distribution)
      and the likelihood function.

      '
    term: posterior distribution
- slug: pothole_case
  am:
    def: 'A naming style that separates the parts of a name with underscores, as in
      `first_second_third`.

      '
    term: pothole case
- slug: preamble
  am:
    def: 'A series of commands, either placed in the main document, or kept in a separate
      document, that are included prior to the \begin{document} command. The preamble
      defines the type of the document, along with other formatting attributes and
      parameters. This is also the section of the document where packages are added
      using the command \usepackage{} to enable additional functionalities, and where
      custom commands can be defined.

      '
    term: preamble
- slug: prerequisite
  am:
    def: 'Something that a [build target](#build_target) depends on.

      '
    term: prerequisite
- slug: principal_component_analysis
  am:
    def: 'An algorithm that find the axis along which data varies most, then the axis
      that accounts for the largest part of the remaining variation, and so on.

      '
    term: principal component analysis
- slug: prior_distribution
  am:
    def: 'The [probability distribution](#probability_distribution) that is assumed
      as a starting point when using [Bayes'' Theorem](#bayes_theorem) and used to
      construct a more accurate [posterior_distribution](#posterior_distribution).

      '
    term: prior distribution
- slug: probability_distribution
  am:
    def: 'A mathematical description of all possible outcomes of a random event, and
      the probability of each occurring.

      '
    term: probability distribution
- slug: procedural_generation
  am:
    def: 'A method of generating data algorithmically rather than manually. Typically
      this is done to reduce file sizes, increase the overall amount of content, and/or
      incorporate randomness at the expense of processing power.

      '
    term: procedural generation
- slug: procedural_programming
  am:
    def: 'A style of programming in which functions operate on data that is passed
      into them. The term is used in contrast to other programming styles, such as
      [object-oriented programming](#oop) and [functional programming](#functional_programming).

      '
    term: procedural programming
- slug: process
  am:
    def: 'An [operating system](#operating_system)''s representation of a running
      program. A process typically has some memory, the identity of the user who is
      running it, and a set of connections to open files.

      '
    term: process
- slug: product_manager
  am:
    def: 'The person responsible for defining what features a product should have.

      '
    term: product manager
- slug: production_code
  am:
    def: 'Software that is delivered to an end user. The term is used to distinguish
      such code from test code, deployment infrastructure, and everything else that
      programmers write along the way.

      '
    term: production code
- slug: project_manager
  am:
    def: 'The person responsible for ensuring that a project moves forward.

      '
    term: project manager
- slug: prompt
  am:
    def: 'The text printed by an [REPL](#repl) or [shell](#shell) that indicates it
      is ready to accept another command. The default prompt in the Unix shell is
      usually `$`, while in [Python](#python) it is `>>>`, and in [R](#r_language)
      it is `>`.

      '
    term: prompt
- slug: protocol
  am:
    def: 'Any standard specifying how two pieces of software interact. A network protocol
      such as [HTTP](#http) defines the messages that [clients](#client) and [servers](#server)
      exchange on the World-Wide Web; [object-oriented](#oop) programs often define
      protocols for interactions between [objects](#object) of different [classes](#class).

      '
    term: protocol
- slug: provenance
  am:
    def: 'A record of where data originally came from and what was done to process
      it.

      '
    term: provenance
- slug: pseudo_random_number
  am:
    def: 'A value generated in a repeatable way that resembles the [true](#true) randomness
      of the universe well enough to fool observers.

      '
    term: pseudo-random number
- slug: prng
  am:
    def: 'A function that can generate [pseudo-random numbers](#pseudo_random_number).

      '
    term: pseudo-random number generator
- slug: pull_indexing
  am:
    def: 'Vectorized indexing in which the value at location `i` in the index [vector](#vector)
      specifies which [element](#element) of the source vector is being pulled into
      that location in the result vector, i.e., `result[i] = source[index[i]]`.

      '
    term: pull indexing
- slug: pull_request
  am:
    def: 'The request to merge a new feature or correction created on a user''s [fork](#fork)
      of a [Git](#git) [repository](#repository) into the [upstream repository](#upstream_repository).
      The developer will be notified of the change, review it, make or suggest changes,
      and potentially [merge](#git_merge) it.

      '
    term: pull request
- slug: push_indexing
  am:
    def: 'Vectorized indexing in which the value at location `i` in the index [vector](#vector)
      specifies an [element](#element) of the result vector that gets the corresponding
      element of the source vector, i.e., `result[index[i]] = source[i]`. Push indexing
      can easily produce gaps and collisions.

      '
    term: push indexing
- slug: python
  am:
    def: 'A popular interpreted open-source programming language that relies on indentation
      to define control structure.

      '
    term: Python
- slug: pypi
  am:
    def: 'The official third-party software repository for [Python](#python). Anyone
      can upload a [package](#package) to PyPI. PyPI packages may install via executed
      scripts or pre-compiled, system-specific wheels.

      '
    term: Python Package Index
- slug: psf
  am:
    def: 'A non-profit organization that oversees and promotes the development and
      use of [Python](#python).

      '
    term: Python Software Foundation
- slug: quantile
  am:
    def: 'If a set of sorted values are divided into groups of each size, each group
      is called a quantile. For example, if there are five groups, each is called
      a *quintile*; the bottom quintile contains the lowest 20% of the values, while
      the top quintile contains the highest 20%.

      '
    term: quantile
- slug: query_string
  am:
    def: 'The portion of a [URL](#url) after the question mark `?` that specifies
      extra parameters for the [HTTP request](#http_request) as name-value pairs.

      '
    term: query string
- slug: quosure
  am:
    def: 'A data structure containing an unevaluated expression and its environment.

      '
    term: quosure
- slug: quoting_function
  am:
    def: 'A function that is passed expressions rather than the values of those expressions.

      '
    term: quoting function
- slug: r_language
  am:
    def: 'A popular open-source programming language used primarily for data science.

      '
    term: R (programming language)
- slug: r_consortium
  am:
    def: 'A group that supports the worldwide community of users, maintainers and
      developers of [R](#r_language). Its members include leading institutions and
      companies dedicated to the use, development, and growth of R.

      '
    term: R Consortium
- slug: r_foundation
  am:
    def: 'A non-profit founded by the R development core team providing support for
      [R](#r_language). It is a member of the [R Consortium](#r_consortium).

      '
    term: R Foundation
- slug: r_hub
  am:
    def: 'A free platform available to check an [R](#r_language) [package](#package)
      on several different platforms in preparation for the CRAN submission process.

      '
    term: R Hub
- slug: r_markdown
  am:
    def: 'A dialect of [Markdown](#markdown) that allows authors to mix prose and
      code (usually written in [R](#r_language)) in a single document.

      '
    term: R Markdown
- slug: raise_exception
  am:
    def: 'To signal that something unexpected or unusual has happened in a program
      by creating an [exception](#exception) and handing it to the [error-handling](#error_handling)
      system, which then tries to find a point in the program that will [catch](#catch_exception)
      it.

      '
    term: raise (an exception)
- slug: random_forests
  am:
    def: 'An algorithm used for regression or [classification](#classification) that
      uses a collection of [decision trees](#decision_tree), called a forest. Each
      tree votes for a classification, and the algorithm chooses the classification
      having the most votes over all the trees in the forest.

      '
    term: random forests
- slug: raster_image
  am:
    def: 'An image stored as a matrix of pixels.

      '
    term: raster image
- slug: reactive_programming
  am:
    def: 'A style of programming in which actions are triggered by external events.

      '
    term: reactive programming
- slug: reactive_variable
  am:
    def: 'A variable whose value is automatically updated when some other value or
      values change. Reactive variables are used extensively in [Shiny](#shiny).

      '
    term: reactive variable
- slug: repl
  am:
    def: 'An interactive program that reads a command typed in by a user, executes
      it, prints the result, and then waits patiently for the next command. REPLs
      are often used to explore new ideas, or for [debugging](#debug).

      '
    term: read-eval-print loop
- slug: readme
  am:
    def: 'A plain text file containing important information about a project or software
      package.

      '
    term: README
- slug: reciprocal
  am:
    def: 'The reciprocal of a number x is 1 / x, or alternatively x raised to the
      power of -1.

      '
    term: reciprocal
- slug: record
  am:
    def: 'A group of related values that are stored together. A record may be represented
      as a [tuple](#tuple) or as a row in a [table](#table); in the latter case, every
      record in the table has the same [fields](#field).

      '
    term: record
- slug: rnn
  am:
    def: 'A class of [artificial neural networks](#neural_network) where connections
      between nodes can create a cycle. This allows the network to exhibit behavior
      that is dynamic over time. This type of network is applicable to tasks like
      speech and handwriting recognition.

      '
    term: recurrent neural network
- slug: recursion
  am:
    def: 'Calling a function from within a call to that function, or defining a term
      using a simpler version of the same term.

      '
    term: recursion
- slug: recycle
  am:
    def: 'To re-use values from a shorter [vector](#vector) in order to generate a
      sequence of the same length as a longer one. In [Python](#python) NumPy, this
      is called broadcasting.

      '
    term: recycle
- slug: redirection
  am:
    def: 'To send a request for a web page or web service to a different page or service.

      '
    term: redirection
- slug: refactoring
  am:
    def: 'Reorganizing software without changing its behavior.

      '
    term: refactoring
- slug: regression_testing
  am:
    def: 'Testing software to ensure that things which used to work have not been
      broken.

      '
    term: regression testing
- slug: regular_expression
  am:
    def: 'A pattern for matching text, written as text itself. Regular expressions
      are sometimes called "regexp", "regex", or "RE", and are powerful tools for
      working with text.

      '
    term: regular expression
- slug: reinforcement_learning
  am:
    def: 'Any [machine learning](#machine_learning) algorithm which is not given specific
      goals to meet, but instead is given feedback on whether or not it is making
      progress.

      '
    term: reinforcement learning
- slug: relational_database
  am:
    def: 'A database that organizes information into [tables](#table), each of which
      has a fixed set of named [fields](#field) (shown as columns) and a variable
      number of [records](#record) (shown as rows).

      '
    term: relational database
- slug: relative_error
  am:
    def: 'The absolute value of the difference between the actual and correct value
      divided by the correct value. For example, if the actual value is 9 and the
      correct value is 10, the relative error is 0.1. Relative error is usually more
      useful than [absolute error](#absolute_error).

      '
    term: relative error
- slug: relative_path
  am:
    def: 'A path whose destination is interpreted relative to some other location,
      such as the [current working directory](#current_working_directory). A relative
      path is the equivalent of giving directions using terms like "straight" and
      "left".

      '
    term: relative path
- slug: relative_row_number
  am:
    def: 'The index of a row in a displayed portion of a table, which may or may not
      be the same as the [absolute row number](#absolute_row_number) within the table.

      '
    term: relative row number
- slug: remote_login
  am:
    def: 'Starting an interactive session on one computer from another computer, e.g.,
      by using [SSH](#ssh).

      '
    term: remote login
- slug: remote_repository
  am:
    def: 'A [repository](#repository) located on another computer. Tools such as [Git](#git)
      are designed to synchronize changes between local and remote repositories in
      order to share work.

      '
    term: remote repository
- slug: repository
  am:
    def: 'A place where a [version control system](#version_control_system) stores
      the files that make up a project and the metadata that describes their history.

      '
    term: repository
- slug: reprex
  am:
    def: 'A reproducible example. When asking questions about coding problems online
      or filing issues on [GitHub](#github), you should always include a reprex so
      others can reproduce your problem and help. The [reprex](https://github.com/tidyverse/reprex)
      package can help!

      '
    term: reprex
- slug: reproducible_example
  am:
    def: 'See [reprex](#reprex).

      '
    term: reproducible example
- slug: reproducible_research
  am:
    def: 'The practice of describing and documenting research results in such a way
      that another researcher or person can re-run the analysis code on the same data
      to obtain the same result.

      '
    term: reproducible research
- slug: rse
  am:
    def: 'Someone whose primary responsibility is to build the specialized software
      that other researchers depend on.

      '
    term: research software engineer
- slug: rseng
  am:
    def: 'The practice of and methods for building the specialized software that other
      researchers depend on.

      '
    term: research software engineering
- slug: reserved_word
  am:
    def: 'A word (character string) with a distinct meaning for a programming or scripting
      language. Typically, reserved words cannot be used as names for variables or
      constants, as this would confuse the compiler or interpreter.

      '
    term: reserved word
- slug: restructured_text
  am:
    def: 'A plaintext [markup](#markup_language) format used primarily in [Python](#python)
      documentation.

      '
    term: reStructured Text
- slug: revision
  am:
    def: 'See [commit](#commit).

      '
    term: revision
- slug: right_join
  am:
    def: 'A [join](#join) that combines data from two tables, A and B. Where [keys](#key)
      in table A match keys in table B, [fields](#field) are concatenated. Where a
      key in table B does *not* match a key in table A, columns from table A are filled
      with [null](#null), [NA](#na), or some other [missing value](#missing_value)
      signifier. Keys from table A that do not exist in table B are dropped.

      '
    term: right join
- slug: roc_curve
  am:
    def: 'A ROC curve (Receiver Operating Characteristic curve) is a graph that displays
      the performance of a binary classifier at different [classification](#classification)
      thresholds. The curve is obtained by plotting the True Positive Rate (also known
      as Recall or [Sensitivity](#sensitivity)) along the vertical axis and the False
      Positive Rate along the horizontal axis.

      '
    term: ROC Curve
- slug: root_tree
  am:
    def: 'The [node](#node) in a [tree](#tree) of which all other nodes are direct
      or indirect [children](#child_tree), or equivalently the only node in the tree
      that has no [parent](#parent_tree).

      '
    term: root (in a tree)
- slug: root_directory
  am:
    def: 'The [directory](#directory) that contains everything else, either directly
      or indirectly. The root directory is written `/` (a bare forward slash).

      '
    term: root directory
- slug: root_mean_squared_error
  am:
    def: 'The [square root](#square_root) of the [mean squared error](#mean_squared_error).
      Like the [standard deviation](#standard_deviation), it is in the same units
      as the original data.

      '
    term: root mean squared error
- slug: rotating_file
  am:
    def: 'A set of files used to store recent information. For example, there might
      be one file with results for each day of the week, so that results from last
      Tuesday are overwritten this Tuesday.

      '
    term: rotating file
- slug: s_language
  am:
    def: 'A language originally developed in Bell Labs for data analysis, statistical
      modeling, and graphics. [R](#r_language) is a dialect of S.

      '
    term: S
- slug: s3
  am:
    def: 'A framework for [object-oriented programming](#oop) in [R](#r_language).

      '
    term: S3
- slug: s4
  am:
    def: 'A framework for [object-oriented programming](#oop) in [R](#r_language).

      '
    term: S4
- slug: sandbox
  am:
    def: 'A testing environment that is separate from the production system, or an
      environment that is only allowed to perform a restricted set of operations for
      security reasons.

      '
    term: sandbox
- slug: sanity_check
  am:
    def: 'A basic test to see if the outcome of a calculation, script or analysis
      makes sense or is true. This can be performed by visualisation or by simply
      inspecting the outcome.

      '
    term: sanity check
- slug: scalar
  am:
    def: 'A single value of a particular type, such as 1 or "a". Scalars exist in
      most languages, but do not really exist in [R](#r_language); in R, values that
      appear to be scalars are actually [vectors](#vector) of unit length.

      '
    term: scalar
- slug: schema
  am:
    def: 'A specification of the format of a dataset, including the name, format,
      and content of each [table](#table).

      '
    term: schema
- slug: scope
  am:
    def: 'The portion of a program within which a definition can be seen and used.
      See [closure](#closure), [global variable](#global_variable), and [local variable](#local_variable).

      '
    term: scope
- slug: script
  am:
    def: 'Originally, a program written in a language too user-friendly for "real"
      programmers to take seriously; the term is now synonymous with program.

      '
    term: script
- slug: search_path
  am:
    def: 'The list of directories that a program searches to find something. For example,
      the Unix [shell](#shell) uses the search path stored in the `PATH` variable
      when trying to find a program whose name it has been given.

      '
    term: search path
- slug: ssh
  am:
    def: 'A protocol and the program that implements it which allows remote access
      to a server through a secure channel where all information is encrypted.

      '
    term: Secure Shell
- slug: seed
  am:
    def: 'A value used to initialize a [pseudo-random number generator](#prng).

      '
    term: seed
- slug: select
  am:
    def: 'To choose entire columns or rows from a table by name or location.

      '
    term: select
- slug: selecting_on_the_dependent_variable_bias
  am:
    def: 'A study that only includes cases where the dependent variable shows the
      same value, instead of cases with different values in the dependent variable,
      is a study affected by selecting on the dependent variable bias.

      '
    term: selecting on the dependent variable bias
- slug: self_join
  am:
    def: 'A [join](#join) that combines a table with itself.

      '
    term: self join
- slug: semantic_versioning
  am:
    def: 'A standard for identifying software releases. In the version identifier
      `major.minor.patch`, `major` changes when a new version of software is incompatible
      with old versions, `minor` changes when new features are added to an existing
      version, and `patch` changes when small [bugs](#bug) are fixed.

      '
    term: semantic versioning
- slug: sense_vote
  am:
    def: 'A preliminary vote used to determine whether further discussion is needed
      in a meeting.

      '
    term: sense vote
- slug: sensitivity
  am:
    def: 'Statistical measure of a classification model which gives the True Positive
      rate. For example, the proportion of people who have a disease that test positive.
      Calculated as Sensitivity = TP/(TP+FN).

      '
    term: sensitivity
- slug: sequential_data
  am:
    def: 'Any list of data items where the order is an inherent property of the list.
      Often the next item in the list is dependent on the previous item or items.

      '
    term: sequential data
- slug: server
  am:
    def: 'Typically, a program such as a database manager or web server that provides
      data to a [client](#client) upon request.

      '
    term: server
- slug: shader
  am:
    def: 'A program designed to run on the [GPU][gpu]. Generally used in graphics
      to calculate lighting or position vertices in a scene, though can be used for
      more general programming through the use of [compute shaders][#compute_shader].

      '
    term: shader
- slug: shebang
  am:
    def: 'In Unix, a character sequence such as `#!/usr/bin/python` in the first line
      of an executable file that tells the [shell](#shell) what program to use to
      run that file.

      '
    term: shebang
- slug: shell
  am:
    def: 'A [command-line interface](#cli) that allows a user to interact with the
      [operating system](#operating_system), such as Bash (for Unix and MacOS) or
      PowerShell (for Windows).

      '
    term: shell
- slug: shell_script
  am:
    def: 'A set of commands for the [shell](#shell) stored in a file so that they
      can be re-executed. A shell script is effectively a program.

      '
    term: shell script
- slug: shell_variable
  am:
    def: 'A variable set and used in the [Unix shell](#shell). Commonly used shell
      variables include `HOME` (the user''s home directory) and `PATH` (their [search
      path](#search_path)).

      '
    term: shell variable
- slug: shiny
  am:
    def: 'A [R](#r_language) [package](#package) that makes it simple to build web
      applications to interactively visualise and manipulate data. Often used to make
      interactive [graphs](graph) and [tables](#table) straight from [R](#r_language)
      without having to know [HTML](#html), [CSS](#css) or JavaScript.

      '
    term: Shiny
- slug: short_circuit_test
  am:
    def: 'A logical test that only evaluates as many arguments as it needs to. For
      example, if `A` is [false](#false), then most languages never evaluate `B` in
      the expression `A and B`.

      '
    term: short circuit test
- slug: short_identifier_git
  am:
    def: 'The first few characters of a [full identifier](#full_identifier_git). Short
      identifiers are easy for people to type and say aloud, and are usually unique
      within a [repository''s](#repository) recent history.

      '
    term: short identifier (of commit)
- slug: short_option
  am:
    def: 'A single-letter identifier for a [command-line argument](#command_line_argument).
      Most common flags are a single letter preceded by a dash, such as `-v`.

      '
    term: short option
- slug: side_effect
  am:
    def: 'A change made by a function while it runs that is visible after the function
      finishes, such as modifying a [global variable](#global_variable) or writing
      to a file. Side effects make programs harder for people to understand, since
      the effects are not necessarily clear at the point in the program where the
      function is called.

      '
    term: side effect
- slug: signal
  am:
    def: 'A way of indicating that something has gone wrong in a program, or that
      some other unexpected event has occurred. [R](#r_language) prefers "signalling
      a condition" to "raising an exception". [Python](#python), on the other hand,
      encourages [raising](#raise_exception) and [catching exceptions](#catch_exception),
      and in some situations, requires it.

      '
    term: signal (a condition)
- slug: smtp
  am:
    def: 'A standard internet communication protocol for transmitting [email](#email).

      '
    term: Simple Mail Transfer Protocol
- slug: smtps
  am:
    def: 'A method for securing [SMTP](#smtp) using [TLS](#tls).

      '
    term: Simple Mail Transfer Protocol Secure
- slug: single_square_brackets
  am:
    def: 'One set of square brackets `[ ]`, used to select a structure from another
      structure based on an index value, or range of values, inside the square brackets.

      '
    term: single square brackets
- slug: single_threaded
  am:
    def: 'A model of program execution in which only one thing can happen at a time.
      Single-threaded execution is easier for people to understand, but less efficient
      than [multi-threaded](#multi_threaded) execution.

      '
    term: single-threaded
- slug: singleton
  am:
    def: 'A set with only one element, or a [class](#class) with only one [instance](#instance).

      '
    term: singleton
- slug: singleton_pattern
  am:
    def: 'A [design pattern](#design_pattern) that creates a [singleton](#singleton)
      [object](#object) to manage some resource or service, such as a database or
      [cache](#cache). In [object-oriented programming](#oop), the pattern is usually
      implemented by hiding the [constructor](#constructor) of the [class](#class)
      in some way so that it can only be called once.

      '
    term: Singleton pattern
- slug: slug
  am:
    def: 'An abbreviated portion of a page''s URL that uniquely identifies it. In
      the example `https://www.mysite.com/category/post-name`, the slug is `post-name`.

      '
    term: slug
- slug: snake_case
  am:
    def: 'See [pothole case](#pothole_case).

      '
    term: snake case
- slug: software_distribution
  am:
    def: 'A set of programs that are built, tested, and distributed as a collection
      so that they can run together.

      '
    term: software distribution
- slug: source_code
  am:
    def: 'Source code or, simply, code, is the origin of executed code (either by
      means of an interpreter or compiler). It''s the primarily human-produced series
      of commands that make up a program. (Note: Automatic code generators exist for
      some applications)

      '
    term: source code
- slug: source_distribution
  am:
    def: 'A [software distribution](#software_distribution) that includes the source
      code, typically so that programs can be recompiled on the target computer when
      they are installed.

      '
    term: source distribution
- slug: specificity
  am:
    def: 'Statistical measure of a classification model which gives the True Negative
      rate. For example, the proportion of people who do not have a disease that test
      negative. Calculated as Specificity = TN/(TN+FP).

      '
    term: specificity
- slug: spectral_analysis
  am:
    def: 'From a finite record of a stationary data sequence, estimate how the total
      power is distributed over frequency. See also "spectrum analysis problem".

      '
    term: spectral analysis
- slug: sprint
  am:
    def: 'A short, intense period of work on a project.

      '
    term: sprint
- slug: sql
  am:
    def: 'The language used for writing queries for a [relational database](#relational_database).
      The term is an acronym for Structured Query Language.

      '
    term: SQL
- slug: square_root
  am:
    def: 'A special case of the [n-th root](#root_math) for which n = 2, i.e. the
      2-nd root has the special name "square root".

      '
    term: Square root
- slug: ssh_key
  am:
    def: 'A string of random bits stored in a file that is used to identify a user
      for [SSH](#ssh). Each SSH key has separate public and private parts; the public
      part can safely be shared, but if the private part becomes known, the key is
      compromised.

      '
    term: SSH key
- slug: stack_frame
  am:
    def: 'A section of the [call stack](#call_stack) that records details of a single
      call to a specific function.

      '
    term: stack frame
- slug: stack_overflow
  am:
    def: 'A question-and-answer site popular among programmers.

      '
    term: Stack Overflow
- slug: standard_deviation
  am:
    def: 'How widely values in a dataset differ from the [mean](#mean). It is calculated
      as the square root of the [variance](#variance).

      '
    term: standard deviation
- slug: stderr
  am:
    def: 'A predefined communication channel for a [process](#process), typically
      used for error messages.

      '
    term: standard error
- slug: stdin
  am:
    def: 'A predefined communication channel for a [process](#process), typically
      used to read input from the keyboard or from the previous process in a [pipe](#pipe_shell).

      '
    term: standard input
- slug: standard_normal_distribution
  am:
    def: 'A [normal distribution](#normal_distribution) with a [mean](#mean) of 0
      and a [standard deviation](#standard_deviation) of 1. Values from normal distributions
      with other [parameters](#parameter) can easily be rescaled to be on a standard
      normal distribution.

      '
    term: standard normal distribution
- slug: stdout
  am:
    def: 'A predefined communication channel for a [process](#process), typically
      used to send output to the screen or to the next process in a [pipe](#pipe_shell).

      '
    term: standard output
- slug: stratified_sampling
  am:
    def: 'Selecting values by dividing the overall population into [homogeneous](#homogeneous)
      groups and then taking a random sample from each group.

      '
    term: stratified sampling
- slug: stream
  am:
    def: 'A sequential flow of data, such as the [bits](#bit) arriving across a network
      connection or the bytes read from a file.

      '
    term: stream
- slug: string
  am:
    def: 'A block of text in a program. The term is short for "character string".

      '
    term: string
- slug: string_interpolation
  am:
    def: 'The process of inserting text corresponding to specified values into a [string](#string),
      usually to make output human-readable.

      '
    term: string interpolation
- slug: students_t_distribution
  am:
    def: 'See [t-distribution](#t_distribution).

      '
    term: student's t-distribution
- slug: subcommand
  am:
    def: 'A command that is part of a larger family of commands. For example, `git
      commit` is a subcommand of [Git](#git).

      '
    term: subcommand
- slug: subdirectory
  am:
    def: 'A directory that is below another directory.

      '
    term: subdirectory
- slug: supervised_learning
  am:
    def: 'A [machine learning](#machine_learning) algorithm in which a system is taught
      to [classify](#classification) values given [training data](#training_data)
      containing previously-classified values.

      '
    term: supervised learning
- slug: svm
  am:
    def: 'A [supervised learning](#supervised_learning) algorithm that seeks to divide
      points in a dataset so that the empty space between the resultant sets is as
      wide as possible.

      '
    term: support vector machine
- slug: synchronous
  am:
    def: 'To happen at the same time. In programming, synchronous operations are ones
      that have to run simultaneously, or complete at the same time.

      '
    term: synchronous
- slug: systematic_error
  am:
    def: 'See [bias](#bias).

      '
    term: systematic error
- slug: t_distribution
  am:
    def: 'A variation on the [normal distribution](#normal_distribution) that is adjusted
      to account for estimating [variance](#variance) from the sample instead of knowing
      it in advance.

      '
    term: t-distribution
- slug: tab_completion
  am:
    def: 'A technique implemented by most [REPLs](#repl), [shells](#shell), and programming
      editors that completes a command, variable name, filename, or other text when
      the TAB key is pressed.

      '
    term: tab completion
- slug: table
  am:
    def: 'A set of [records](#record) in a [relational database](#relational_database)
      or [observations](#observation) in a [data frame](#data_frame). Tables are usually
      displayed as rows (each of which represents one record or observation and columns
      (each of which represents a [field](#field) or [variable](#variable_data).

      '
    term: table
- slug: tag
  am:
    def: 'A readable label attached to a specific [commit](#commit) so that it can
      easily be referenced later.

      '
    term: tag (in version control)
- slug: template_method_pattern
  am:
    def: 'A [design pattern](#design_pattern) in which a [parent class](#parent_class)
      defines an overall sequence of operations by calling [abstract methods](#abstract_method)
      that [child classes](#child_class) must then implement. Each child class then
      behaves in the same general way, but implements the steps differently.

      '
    term: Template Method pattern
- slug: ternary_expression
  am:
    def: 'An expression that has three parts. [Conditional expressions](#conditional_expression)
      are the only ternary expressions in most languages.

      '
    term: ternary expression
- slug: tessellation_shader
  am:
    def: 'The [shader](#shader) stage in the rendering pipeline designated towards
      subdividing primitives to increase the resolution of a mesh without impacting
      memory. Not to be confused with [geometry shaders](#geometry_shader) which change
      the overall shape.

      '
    term: tessellation shader
- slug: test_data
  am:
    def: 'Test data is a portion of a dataset used to evaluate the correctness of
      a [machine learning](#machine_learning) algorithm after it has been trained.
      It should always be separated from the [training data](#training_data) to ensure
      that the model is properly tested with unseen data.

      '
    term: test data
- slug: test_runner
  am:
    def: 'A program that finds and runs software tests and reports their results.

      '
    term: test runner
- slug: tdd
  am:
    def: 'A programming practice in which tests are written before a new feature is
      added or a [bug](#bug) is fixed in order to clarify the goal.

      '
    term: test-driven development
- slug: three_vs
  am:
    def: 'The volume, velocity, and variety that distinguish [big data](#big_data).

      '
    term: three Vs
- slug: throw_exception
  am:
    def: 'Another term for [raising](#raise_exception) an exception.

      '
    term: throw (exception)
- slug: tibble
  am:
    def: 'A modern replacement for [R](#r_language)''s data frame, which stores tabular
      data in columns and rows, defined and used in the [tidyverse](#tidyverse).

      '
    term: tibble
- slug: ticket
  am:
    def: 'See [issue](#issue).

      '
    term: ticket
- slug: ticketing_system
  am:
    def: 'See [issue tracking system](#issue_tracking_system).

      '
    term: ticketing system
- slug: tidy_data
  am:
    def: "Tabular data that satisfies [three conditions](https://vita.had.co.nz/papers/tidy-data.pdf)\
      \ that facilitate initial cleaning, and later exploration and analysis\u2014\
      (1) each variable forms a column, (2) each observation forms a row, and (3)\
      \ each type of observation unit forms a table.\n"
    term: tidy data
- slug: tidymodels
  am:
    def: 'A collection of [R](#r_language) [packages](#package) for modeling and statistical
      analysis designed with a [shared philosophy](https://tidymodels.github.io/model-implementation-principles/index.html).

      '
    term: Tidymodels
- slug: tidyverse
  am:
    def: 'A collection of [R](#r_language) [packages](#package) for operating on tabular
      data in consistent ways.

      '
    term: Tidyverse
- slug: time_series
  am:
    def: 'A set of measurements taken at different times, which may or may not be
      regular intervals.

      '
    term: time series
- slug: timestamp
  am:
    def: 'A digital identifier showing the time at which something was created or
      accessed. Timestamps should use [ISO date format](#iso_date_format) for portability.

      '
    term: timestamp
- slug: tolerance
  am:
    def: 'How closely the [actual result](#actual_result) of a test must agree with
      the [expected result](#expected_result) in order for the test to pass. Tolerances
      are usually expressed in terms of [relative error](#relative_error).

      '
    term: tolerance
- slug: training_data
  am:
    def: 'Training data is a portion of a dataset used to train [machine learning](#machine_learning)
      algorithm to recognise similar data. It should always be separated from the
      [test data](#test_data) to ensure that the model is properly tested with data
      it has never seen before.

      '
    term: training data
- slug: transfer_learning
  am:
    def: 'Transfer learning is a specific form of deep learning that has 2 stages.
      First, in the pre-training  phase, a neural network is trained on a (typically
      large) generic dataset. Second, the  fine-tuning phase, the neural network is
      adapted to the specifics of a (typically smaller) new  dataset. The idea is
      that the network will capture generic knowledge in the pre-training phase  that
      is relevant for learning in the fine-tuning task.

      '
    term: transfer learning (deep learning)
- slug: transitive_dependency
  am:
    def: 'If A depends on B and B depends on C, C is a transitive dependency of A.

      '
    term: transitive dependency
- slug: tls
  am:
    def: 'A cryptographic protocol for securing communications over a computer network.

      '
    term: Transport Layer Security
- slug: tree
  am:
    def: 'A [graph](#graph) in which every node except the [root](#root_tree) has
      exactly one [parent](#parent_tree).

      '
    term: tree
- slug: triage
  am:
    def: 'To go through the [issues](#issue) associated with a project and decide
      which are currently priorities. Triage is one of the key responsibilities of
      a [project manager](#project_manager).

      '
    term: triage
- slug: 'true'
  am:
    def: 'The logical ([Boolean](#boolean)) state opposite of "[false](#false)". Used
      in logic and programming to represent a [binary](#binary) state of something.

      '
    term: 'true'
- slug: true_negative
  am:
    def: 'Data points which are actually [false](#false) and correctly predicted as
      [false](#false).

      '
    term: true negative
- slug: true_positive
  am:
    def: 'Data points which are actually [true](#true) and correctly predicted as
      [true](#true).

      '
    term: true positive
- slug: truthy
  am:
    def: 'Evaluating to [true](#true) in a [Boolean](#boolean) context.

      '
    term: truthy
- slug: tuple
  am:
    def: 'A data type that has a fixed number of parts, such as the three color components
      of a red-green-blue color specification. In "[Python](#python)", tuples are
      immutable (their values cannot be reset.)

      '
    term: tuple
- slug: two_hard_problems
  am:
    def: "Refers to a quote by Phil Karlton\u2014\"There are only two hard problems\
      \ in computer science\u2014cache invalidation and naming things.\" Many variations\
      \ add a third problem (most often \"[off-by-one errors](#off_by_one_error)\"\
      ).\n"
    term: two hard problems in computer science
- slug: type_coercion
  am:
    def: 'To convert data from one type to another, e.g., from the integer `4` to
      the equivalent floating point number `4.0`.

      '
    term: type coercion
- slug: unary_expression
  am:
    def: 'An expression with one argument, such as `log 5`.

      '
    term: unary expression
- slug: unicode
  am:
    def: 'A standard that defines numeric codes for many thousands of characters and
      symbols. Unicode does not define how those numbers are stored; that is done
      by standards like [UTF-8](#utf_8).

      '
    term: Unicode
- slug: url
  am:
    def: 'A unique address on the World-Wide Web. URLs originally identified web pages,
      but may also represent datasets or database queries, particularly if they include
      a [query string](#query_string).

      '
    term: Uniform Resource Locator
- slug: unit_test
  am:
    def: 'A test that exercises one function or feature of a piece of software and
      produces [pass](#pass_test), [fail](#fail_test), or [error](#error_test).

      '
    term: unit test
- slug: unix
  am:
    def: 'UNIX is a family of [operating systems](#operating_system) developed during
      1969 at AT&T Bell Labs. Its main features are simple tools, well-defined functionality
      and being portable by nature.

      '
    term: UNIX
- slug: unsupervised_learning
  am:
    def: 'Algorithms that [cluster](#clustering) data without knowing in advance what
      the groups will be.

      '
    term: unsupervised learning
- slug: up_vote
  am:
    def: 'A vote in favor of something.

      '
    term: up-vote
- slug: update_operator
  am:
    def: 'See [in-place operator](#in_place_operator).

      '
    term: update operator
- slug: upstream_repository
  am:
    def: 'The [remote repository](#remote_repository) from which this [repository](#repository)
      was derived. Programmers typically save changes in their own repository and
      then submit a [pull request](#pull_request) to the upstream repository where
      changes from other programmers are also collected.

      '
    term: upstream repository
- slug: user_interface
  am:
    def: 'Platform for interaction between a user and a machine. The interaction may
      occur via text (a [command line interface](#cli)), graphics and windows (a [graphical
      user interface](#gui)), or other methods such as voice-driven interfaces.

      '
    term: user interface
- slug: utf_8
  am:
    def: 'A way to store the numeric codes representing [Unicode](#unicode) characters
      in memory that is [backward-compatible](#backward_compatible) with the older
      [ASCII](#ascii) standard.

      '
    term: UTF-8
- slug: variable_data
  am:
    def: 'Some attribute of a population that can be measured or observed.

      '
    term: variable (data)
- slug: variable_program
  am:
    def: 'A name in a program that has some data associated with it. A variable''s
      value can be changed after definition.

      '
    term: variable (program)
- slug: variable_arguments
  am:
    def: 'In a function, the ability to take any number of arguments. [R](#r_language)
      uses `...` to capture the "extra" arguments. [Python](#python) uses `*args`
      and `**kwargs` to capture unnamed, and named, "extra" arguments, respectively.

      '
    term: variable arguments
- slug: variance
  am:
    def: 'How widely values in a dataset differ from the [mean](#mean). It is calculated
      as the average of the squared differences between the values and the mean. The
      [standard deviation](#standard_deviation) is often used instead, since it has
      the same units as the data, while the variance is expressed in units squared.

      '
    term: variance
- slug: vector
  am:
    def: 'A sequence of values, usually of [homogeneous](#homogeneous) type. Vectors
      are the fundamental data structure in [R](#r_language); a [scalar](#scalar)
      is just a vector with exactly one [element](#element).

      '
    term: vector
- slug: vectorize
  am:
    def: 'To write code so that operations are performed on entire vectors, rather
      than element-by-element within loops.

      '
    term: vectorize
- slug: version_control_system
  am:
    def: 'A system for managing changes made to software during its development.

      '
    term: version control system
- slug: vertex_shader
  am:
    def: 'The [shader](#shader) stage in the rendering pipeline designated towards
      handling operations on individual vertices in a scene. A vertex shader can be
      used to calculate properties of a single vertex, such as position and per-vertex
      lighting. Not to be confused with [fragment shaders](#fragment_shader) which
      are used to determine the actual colour being rendered to each pixel of the
      screen.

      '
    term: vertex shader
- slug: vignette
  am:
    def: 'A long-form guide used to provide details of a [package](#package) beyond
      the README.md or function documentation.

      '
    term: vignette
- slug: vim
  am:
    def: 'The default text editor on Unix. Vim is a very powerful text editor, with
      a steeper learning curve than [nano](#nano_editor), but that allows the user
      to execute shell commands and use [regular expressions](#regular_expression)
      to alter files programmatically.

      '
    term: Vim (editor)
- slug: virtual_environment
  am:
    def: 'In [Python](#python), the `virtualenv` [package](#package) allows you to
      create virtual, disposable, [Python](#python) software environments containing
      only the packages and versions of packages you want to use for a particular
      project or task, and to install new packages into the environment without affecting
      other virtual environments, or the system-wide default environment.

      '
    term: virtual environment
- slug: virtual_machine
  am:
    def: 'A program that pretends to be a computer. This may seem a bit redundant,
      but VMs are quick to create and start up, and changes made inside the virtual
      machine are contained within that VM so we can install new [packages](#package)
      or run a completely different operating system without affecting the underlying
      computer.

      '
    term: virtual machine
- slug: visitor_pattern
  am:
    def: 'A [design pattern](#design_pattern) in which the operation to be done is
      taken to each element of a data structure in turn. It is usually implemented
      by having a generator "visitor" that knows how to reach the structure''s elements,
      which is given a function or method to call for each in turn, and that carries
      out the specific operation.

      '
    term: Visitor pattern
- slug: walk_tree
  am:
    def: 'To visit each [node](#node) in a [tree](#tree) in some order, typically
      [depth-first](#depth_first) or [breadth-first](#breadth_first).

      '
    term: walk (a tree)
- slug: while_loop
  am:
    def: 'A statement in a program that repeats one or more other statements (the
      [loop body](#loop_body)) as long as a condition is [true](#true).

      '
    term: while loop
- slug: whitespace
  am:
    def: 'The space, newline, carriage return, and horizontal and vertical tab characters
      that take up space but do not create a visible mark. The name comes from their
      appearance on a printed page in the era of typewriters.

      '
    term: whitespace
- slug: wildcard
  am:
    def: 'A character expression that can match text, such as the `*` in `*.csv` (which
      matches any filename whose name ends with `.csv`).

      '
    term: wildcard
- slug: workflow
  am:
    def: 'A way of describing work to be done as a set of tasks, typically with dependencies
      on external inputs or the outputs of other tasks, which can later be executed
      by a program. An example is a Makefile which can be executed by the make Unix
      command.

      '
    term: workflow
- slug: xml
  am:
    def: 'A set of rules for defining [HTML](#html)-like tags and using them to format
      documents (typically data). XML was popular in the early 2000s, but its complexity
      led many programmers to adopt [JSON](#json), instead.

      '
    term: XML
- slug: yaml
  am:
    def: 'Short for "YAML Ain''t Markup Language", a way to represent nested data
      using indentation rather than the parentheses and commas of [JSON](#json). YAML
      is often used in configuration files and to define [parameters](#parameter)
      for various flavours of [Markdown](#markdown) documents.

      '
    term: YAML
